// Generated by CoffeeScript 1.6.3
var AssetManager;

AssetManager = (function() {
  function AssetManager() {
    this.imagesPrefix = 'images/';
    this.tilemapsPrefix = 'levels/';
    this.imagesToLoad = [];
    this.tilemapsToLoad = [];
    this.assets = {};
    this.remaining = 0;
  }

  AssetManager.prototype.loadImage = function(url) {
    return this.imagesToLoad.push(url);
  };

  AssetManager.prototype.loadTilemap = function(url) {
    return this.tilemapsToLoad.push(url);
  };

  AssetManager.prototype.start = function(callback) {
    var img, imgUrl, tilemapUrl, _fn, _i, _j, _len, _len1, _ref, _ref1, _results,
      _this = this;
    _ref = this.tilemapsToLoad;
    _fn = function(tilemapUrl) {
      var xhr;
      xhr = new XMLHttpRequest();
      xhr.open('GET', _this.tilemapsPrefix + tilemapUrl, true);
      xhr.url = tilemapUrl;
      _this.remaining++;
      xhr.onreadystatechange = function() {
        if (xhr.readyState === 4) {
          _this.assets[xhr.url] = JSON.parse(xhr.response);
          _this.remaining--;
          if (_this.remaining === 0) {
            return callback();
          }
        }
      };
      return xhr.send();
    };
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      tilemapUrl = _ref[_i];
      _fn(tilemapUrl);
    }
    _ref1 = this.imagesToLoad;
    _results = [];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      imgUrl = _ref1[_j];
      img = new Image();
      img.src = this.imagesPrefix + imgUrl;
      this.remaining++;
      img.onload = function() {
        _this.remaining--;
        if (_this.remaining === 0) {
          return callback();
        }
      };
      _results.push(this.assets[imgUrl] = img);
    }
    return _results;
  };

  return AssetManager;

})();
